@page "/"
@using CurrieTechnologies.Razor.SweetAlert2
@using BlazorApp1.Extensions
@using System.Net.Http.Json
@using System.Text.Json
@using Newtonsoft.Json
@using System.Diagnostics
@using System.IO
@using BlazorApp1.Dtos
@using Smart.Design.Blazor.Components.Common.Enums

@inject IJSRuntime _js;
@inject SweetAlertService _swal;

<SmartGlobalBanner>Hello toto</SmartGlobalBanner>

<SmartAlert Message="titio" Closable="true" AlertStyle="AlertStyle.Success"></SmartAlert>

@*<SmartPanel>
	<Header>
		<h2>This is a panel</h2>
	</Header>
	<ChildContent>
	<input class="c-input" type="date"/>
	</ChildContent>
</SmartPanel>*@

@Toto

<SmartButton Label="test loader" OnClick="LoaderOnClick"></SmartButton>

<SmartLoader Alignment="Alignment.Start" IsLoading="@(string.IsNullOrWhiteSpace(Toto))">
    <ContentTemplate>
        <p>bonjour toto</p>
    </ContentTemplate>
</SmartLoader>

<SmartFileUpload OnChange="LoadFiles" Label="Download" HelperText="Drag your files"></SmartFileUpload>

@*<InputFile OnChange="LoadFiles" ></InputFile>*@

<p>@TestGroup</p>

<SmartInputGroup @bind-Value="TestGroup">
    <PrependContent>
        <SmartIcon Icon="Icon.ArrowLeft"></SmartIcon>
    </PrependContent>
</SmartInputGroup>

<SmartInputText @bind-Value="TestGroup"></SmartInputText>

<div class="o-form-group-layout o-form-group-layout--standard">

    <SmartButton ButtonStyle="ButtonStyle.Secondary" Label="Button !!" LeadingIcon="Icon.Instagram" TrailingIcon="Icon.Check"></SmartButton>

    <SmartIcon Icon="Icon.ArrowDown"></SmartIcon>

    <FormGroup Label="Firstname" HelperText="Fill only your first firstname">
        <SmartInputText @bind-Value="Firstname"></SmartInputText>
    </FormGroup>

    <FormGroup Label="Lastname" HelperText="Fill in your lastname">
        <SmartTextArea @bind-Value="Lastname"></SmartTextArea>
    </FormGroup>

    <FormGroup Label="Country">
        <SmartSelect TItem="Country" Items="Countries" ValueField="@nameof(Country.Code)" DisplayField="@nameof(Country.Name)" @bind-SelectedItem="SelectedCountry">
            <option>choose a country !</option>
        </SmartSelect>
    </FormGroup>

    <FormGroup Label="Choice">
        <SmartCheckbox Label="Like cheese ?" @bind-IsChecked="LikeCheese"></SmartCheckbox>
        <SmartCheckbox Label="Like burgers ?" @bind-IsChecked="LikeBurgers"></SmartCheckbox>
        <SmartCheckbox Label="Like vegetables ?" @bind-IsChecked="LikeVegetables"></SmartCheckbox>
    </FormGroup>

    <button @onclick="ButtonOnClick" type="button">Click me</button>
</div>

@code
{
    public Member SelectedPerson { get; set; }

    public string? Firstname
    {
        get => _firstname;
        set { _firstname = value; }
    }

    public string? TestGroup { get; set; } = "gogo";

    public Member Model { get; set; } = new();

    public string? Lastname { get; set; } = "Le tete";

    public string? City { get; set; }

    public Country? SelectedCountry { get; set; }

    protected override async Task OnInitializedAsync()
    {
        HttpClient httpClient = new HttpClient();

        var requestUrl = "https://gist.githubusercontent.com/keeguon/2310008/raw/bdc2ce1c1e3f28f9cab5b4393c7549f38361be4e/countries.json";

        var response = await httpClient.GetStringAsync(requestUrl);
        Countries = JsonConvert.DeserializeObject<List<Country>>(response);
    }

    private void ButtonOnClick()
    {
        Lastname += " Kiwi jackson";
        return;


        Val = " toto: " + Firstname + " " + Lastname + " " + City;
    }

    public string? Val { get; set; }

    private async Task FirstnameOnKeyUp(KeyboardEventArgs obj)
    {
    //_swal.FireAsync("Firsname", $"Firstname is {Firstname}", SweetAlertIcon.Success);
        await _js.InvokeVoidAsync("console.log", Firstname);
        await _js.InvokeVoidAsync("console.log", obj.ToJson());
    }

    private void Callback(KeyboardEventArgs obj)
    {
    }

    public bool IsDisabled { get; set; }

    public class Member
    {
        private string? _firstname;

        public string? Firstname
        {
            get => _firstname;
            set { _firstname = value; }
        }

        public string? Lastname { get; set; }

        public string? City { get; set; }
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }

    private async Task InputOnKeyUp(KeyboardEventArgs obj)
    {
        await _js.ConsoleLogAsync("ON KEY UP");
        await _js.ConsoleLogAsync("--------------------------");
        await _js.InvokeVoidAsync("console.log", Firstname);
        await _js.InvokeVoidAsync("console.log", obj.ToJson());
        await _swal.FireAsync("Firsname", $"Firstname is {Firstname}", SweetAlertIcon.Success);
    }

    private async Task OnInput(ChangeEventArgs obj)
    {
        await _js.ConsoleLogAsync("ON input");
        await _js.ConsoleLogAsync("--------------------------");
        await _js.ConsoleLogAsync(Firstname);
        await _js.ConsoleLogAsync(obj.ToJson());

        Firstname = obj.Value?.ToString();
    }

    private string? _firstname = "toto";

    private void OnKeyPress(KeyboardEventArgs obj)
    {
    }

    private void OnKeyDown(KeyboardEventArgs obj)
    {
    }

    public List<Country>? Countries { get; set; }

    public bool LikeCheese { get; set; }

    public bool LikeVegetables { get; set; }

    public bool LikeBurgers { get; set; }

    private Task ButtonOnClick(MouseEventArgs obj)
    {
        Console.WriteLine("clicked !!!");
        return Task.CompletedTask;
    }

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        var o = e.GetMultipleFiles(1);
        var f = o.First();

        var memoryStream = f.OpenReadStream();

        var reader = new StreamReader(memoryStream);
        Toto = await reader.ReadToEndAsync();
    }

    public Alignment Alignment { get; set; }

    public string? Toto { get; set; }

    private void LoaderOnClick()
    {
        this.Alignment = Alignment.Start;
    }
}